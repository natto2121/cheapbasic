#
# 8-Queens :  8 Queens problem
# A normal algorithm.
#
######################################################################

	no = 0
	x = 1
	y = 1
	gosub Calculate
	end


#
# calculate main
#
label Calculate
	if x = 9 then gosub PrintBoard: return
	for y = 1 to 8 
		gosub IsSafe
		if safe then board(x) = y: gosub Push: x = x + 1: gosub Calculate: gosub Pop: board(x) = 0
	next
	return

#
# push valiables for Calculate.
#
label Push
	x(sp) = x
	y(sp) = y
	sp = sp + 1
	return

#
# pop valiables for Calculate.
#
label Pop
	sp = sp - 1
	x = x(sp)
	y = y(sp)
	return

#
# set row, col
#
label IsSafe
	safe = 0
	for i = 1 to x
		if board(i) = y then i = 9: next :return
		if x - i = board(i) - y then i = 9: next :return
		if x - i = y - board(i) then i = 9: next :return
	next
	safe = 1
	return


#
# Output
#
label PrintBoard

############### Check Unique #####################

	gosub checkUnique
	if not unique then return

# above 2-lines,
#    'gosub checkUnique'
#    'if not unique then return'
# are optional, can be removed.
#
##################################################

	no = no + 1
	print "A.";no
	for xx = 1 to 8
		for yy = 1 to 8
			if board(xx) = yy then print " Q";
			if board(xx) <> yy then print " .";
		next
		print
	next
	print
	return


##################################################
#
# check unique
#
label checkUnique
	unique = 0
	gosub Numberize
#	if maxans=0 then unique = 1:gosub Insert: return
	for i = 0 to maxans
		if ans(i) = num then i = maxans + 1: next: return
	next
	gosub Insert
	unique = 1
	return
	
label Insert
	gosub Rotate
	gosub Rotate
	gosub Rotate
	gosub Rotate
	gosub Reverse
	gosub Rotate
	gosub Rotate
	gosub Rotate
	return
	
label Rotate
	for x = 1 to 8
		y = board(x)
		xx = 9 - y
		yy = x
		d(xx) = yy
	next
	gosub DataToBoard
	gosub InsertAnAnswer
	return
	
label Reverse
	for x=1 to 8
		y = board(x)
		board(x) = 9 - y
	next
	gosub InsertAnAnswer
	return
	
label Numberize
	num = 0
	for i = 1 to 8
		num = num * 10 + board(i)
	next i
	return
	
label DataToBoard
	for x = 1 to 8
		board(x) = d(x)
	next
	return

label InsertAnAnswer
	gosub Numberize
	ans(maxans) = num
	maxans = maxans + 1
	return
	
	
